{"ast":null,"code":"var _jsxFileName = \"C:\\\\Neda\\\\Bootcamp\\\\Challenges\\\\Plenty\\\\client\\\\src\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; //import { ComboBox } from \"@progress/kendo-react-dropdowns\";\n\nimport { MultiSelect } from \"@progress/kendo-react-dropdowns\";\nimport { useState } from \"react\";\nimport '@progress/kendo-theme-default/dist/all.css';\nimport { Card, Container, Button, ListGroupItem, ListGroup, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  //added here\n  useEffect(() => {\n    // api to call ingredients\n    fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list').then(response => response.json()).then(norm => {\n      const ingredientsName = norm.meals.map(ing => ing.strIngredient);\n      setIngredients(ingredientsName);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // DO NOT DELETE THE EMPTY ARRAY!!!! LEAVE IT THERE!!!!!!!!!!\n\n  const [ingredients, setIngredients] = useState([]);\n  const [selectedIngredients, setSelectedIngredients] = useState([]);\n\n  const onIngredientChange = event => setSelectedIngredients([...event.value]);\n\n  const [selectedAssignee, setSelectedAssignee] = useState(null);\n\n  const onChange = event => setSelectedAssignee(event.value);\n\n  const [meals, setMeals] = useState([]);\n  const [style, setStyle] = useState({\n    display: 'none'\n  });\n  const [style1, setStyle1] = useState({\n    display: 'block'\n  }); // on submit function/ take selected ingredients and send it to our other api, then render results.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"k-label k-mb-3\",\n          children: \"Choose your ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n          data: ingredients,\n          value: selectedIngredients,\n          onChange: onIngredientChange,\n          autoClose: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), console.log(selectedIngredients), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => fetch(`https://www.themealdb.com/api/json/v2/1/filter.php?i=${selectedIngredients.join(',')}`).then(console.log(`https://www.themealdb.com/api/json/v2/1/filter.php?i=${selectedIngredients.join(',')}`)).then(response => response.json()).then(recipes => {\n            console.log(recipes);\n\n            if (recipes !== null) {\n              setMeals(recipes.meals);\n            }\n          }),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: meals !== null && meals.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n            xs: 1,\n            md: 2,\n            className: \"g-2\",\n            children: meals.map(meal => /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Card, {\n                sm: \"4\",\n                style: style1,\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: `${meal.strMealThumb}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: meal.strMeal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                    onClick: () => {\n                      {\n                        fetch(`https://www.themealdb.com/api/json/v2/1/lookup.php?i=${meal.idMeal}`).then(response => {\n                          return response.json();\n                        }).then(recipes => {\n                          console.log(recipes);\n                          setMeals(recipes.meal);\n                        });\n                        console.log('here is meal id: ', meal.idMeal);\n                        setStyle({\n                          display: 'block'\n                        });\n                        setStyle1({\n                          display: 'none'\n                        });\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: `${meal.idMeal}`,\n                  variant: \"primary\",\n                  children: \"Favorite \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card, {\n                sm: \"4\",\n                style: style,\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: `${meal.strMealThumb}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: meal.strMeal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: \"YES\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this) : selectedIngredients.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" There are no Available recepies with this ingredients...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 52\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 123\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"yP4itJXYkqk0XHphUIvZa9LuHoE=\");\n\n_c = Form;\nexport default Form; // <ListGroup className=\"list-group-flush\">\n//<ListGroupItem>Nationality: {meal.strArea} </ListGroupItem>\n//<ListGroupItem>Cuisine: {meal.strCategory}</ListGroupItem>\n//</ListGroup>\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Neda/Bootcamp/Challenges/Plenty/client/src/components/Form.js"],"names":["React","useEffect","MultiSelect","useState","Card","Container","Button","ListGroupItem","ListGroup","Row","Col","Form","fetch","then","response","json","norm","ingredientsName","meals","map","ing","strIngredient","setIngredients","catch","error","console","log","ingredients","selectedIngredients","setSelectedIngredients","onIngredientChange","event","value","selectedAssignee","setSelectedAssignee","onChange","setMeals","style","setStyle","display","style1","setStyle1","e","preventDefault","join","recipes","length","meal","strMealThumb","strMeal","idMeal"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\n//import { ComboBox } from \"@progress/kendo-react-dropdowns\";\r\nimport { MultiSelect } from \"@progress/kendo-react-dropdowns\";\r\nimport { useState } from \"react\";\r\nimport '@progress/kendo-theme-default/dist/all.css';\r\nimport { Card, Container, Button, ListGroupItem, ListGroup, Row,Col } from 'react-bootstrap';\r\n\r\nfunction Form() {\r\n  //added here\r\n\r\n  useEffect(() => {\r\n    // api to call ingredients\r\n    fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list')\r\n      .then(response => response.json())\r\n      .then(norm => {\r\n        const ingredientsName = norm.meals.map(ing => ing.strIngredient)\r\n        setIngredients(ingredientsName)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, []) // DO NOT DELETE THE EMPTY ARRAY!!!! LEAVE IT THERE!!!!!!!!!!\r\n  const [ingredients, setIngredients] = useState([])\r\n  const [selectedIngredients, setSelectedIngredients] = useState([])\r\n  const onIngredientChange = event => setSelectedIngredients([...event.value])\r\n  const [selectedAssignee, setSelectedAssignee] = useState(null);\r\n  const onChange = event => setSelectedAssignee(event.value);\r\n  const [meals, setMeals] = useState([])\r\n  const [style,setStyle] = useState({display: 'none'});\r\n  const [style1,setStyle1] = useState({display: 'block'});\r\n\r\n  // on submit function/ take selected ingredients and send it to our other api, then render results.\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"container\">\r\n        <h1>Form</h1>\r\n        {/* HERE IS THE CALL BACK FROM THE SELECTED LIST AND RECIPE RESULTS */}\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <label className=\"k-label k-mb-3\">Choose your ingredients</label>\r\n          <MultiSelect data={ingredients} value={selectedIngredients} onChange={onIngredientChange} autoClose={false}></MultiSelect>\r\n          {console.log(selectedIngredients)}\r\n          <button type=\"submit\" onClick={() => fetch(`https://www.themealdb.com/api/json/v2/1/filter.php?i=${selectedIngredients.join(',')}`)\r\n            .then(console.log(`https://www.themealdb.com/api/json/v2/1/filter.php?i=${selectedIngredients.join(',')}`))\r\n            .then(response => response.json())\r\n            .then(recipes => {\r\n              console.log(recipes)\r\n              if(recipes!==null){\r\n                setMeals(recipes.meals)\r\n              }\r\n            })\r\n          }\r\n          >Submit</button>\r\n          \r\n          <Container>\r\n            {meals !== null && meals.length > 0 ?\r\n                <Row xs={1} md={2} className=\"g-2\">\r\n                    {(meals).map((meal) => (\r\n                    <Col>\r\n                    <Card sm='4' style={style1}>\r\n                      <Card.Img variant=\"top\" src={`${meal.strMealThumb}`} />\r\n                      <Card.Title>{meal.strMeal}</Card.Title>\r\n                     <Card.Body>\r\n                      <Card.Text onClick={\r\n                          () => {\r\n                            { fetch(`https://www.themealdb.com/api/json/v2/1/lookup.php?i=${meal.idMeal}`)\r\n                              .then(response => {\r\n                                return response.json()\r\n                              })\r\n                              .then(recipes => {\r\n                                console.log(recipes)\r\n                                setMeals(recipes.meal)\r\n                              })\r\n                              console.log('here is meal id: ', meal.idMeal)\r\n                              setStyle({display: 'block'});\r\n                              setStyle1({display: 'none'});\r\n                          }\r\n                          }\r\n                        }></Card.Text>\r\n                    </Card.Body>\r\n                      <Button id={`${meal.idMeal}`} variant=\"primary\">Favorite </Button>\r\n                    </Card>\r\n\r\n                    <Card sm='4' style={style}>\r\n                      <Card.Img variant=\"top\" src={`${meal.strMealThumb}`} />\r\n                        <Card.Title>{meal.strMeal}</Card.Title>\r\n                      <Card.Body>\r\n                        <Card.Text >YES</Card.Text>\r\n                      </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                  )) }\r\n                </Row>\r\n                : selectedIngredients.length!==0 ? <div> There are no Available recepies with this ingredients...</div> : <div></div>\r\n                }\r\n    \r\n        </Container>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n\r\n\r\n// <ListGroup className=\"list-group-flush\">\r\n//<ListGroupItem>Nationality: {meal.strArea} </ListGroupItem>\r\n//<ListGroupItem>Cuisine: {meal.strCategory}</ListGroupItem>\r\n//</ListGroup>"]},"metadata":{},"sourceType":"module"}